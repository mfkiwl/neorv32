name: 'Documentation'

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:


  doxygen:
    runs-on: ubuntu-latest
    name: 'SW Framework'

    steps:

    - name: '🧰 Repository Checkout'
      uses: actions/checkout@v2

    - name: '🛠️ Modifying Doxyfile'
      run: |
        ls -al ./docs
        sed -i 's/$(PWD)\/../$(GITHUB_WORKSPACE)/g' ./docs/Doxyfile

    - name: '📚 Generate Doxygen Documentation'
      uses: mattnotmitt/doxygen-action@v1.2.1
      with:
        working-directory: '.'
        doxyfile-path: 'docs/Doxyfile'

    - name: '📤 Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: NEORV32-Doxygen
        path: doxygen_build/html


  asciidoctor:
    runs-on: ubuntu-latest
    name: 'Datasheet'

    steps:

    - name: '🧰 Repository Checkout'
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: '📚 Build Datasheet (PDF and HTML)'
      run: make container

    - name: '📤 Upload Artifact: PDF'
      uses: actions/upload-artifact@v2
      with:
        name: NEORV32-PDF
        path: docs/NEORV32.pdf

    - name: '📤 Upload Artifact: HTML'
      uses: actions/upload-artifact@v2
      with:
        name: NEORV32-HTML
        path: |
          docs/index.html
          docs/figures


  deploy:
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || contains(github.ref, 'refs/tags/'))
    needs:
      - doxygen
      - asciidoctor
    runs-on: ubuntu-latest
    name: 'Deploy to Releases and Pages'

    steps:

    - name: '🧰 Repository Checkout'
      uses: actions/checkout@v2

    - name: '📥 Download Artifacts'
      uses: actions/download-artifact@v2

    - name: '🛠️ Organise public subdir and create a tarball'
      run: |
        mv NEORV32-HTML public
        mv NEORV32-Doxygen public/sw
        tar zvcf NEORV32-SITE-nightly.tar.gz -C public .
        mv NEORV32-PDF/NEORV32.pdf public
        cp public/NEORV32.pdf NEORV32-nightly.pdf

    # Tagged: create a pre-release or a release (semver)
    # Untagged: update the assets of pre-release 'nightly'
    - name: '📦 Deploy to GitHub-Releases'
      uses: eine/tip@master
      with:
        token: ${{ github.token }}
        tag: 'nightly'
        files: |
          NEORV32-SITE-nightly.tar.gz
          NEORV32-nightly.pdf

    - name: '🚀 Deploy to GitHub-Pages'
      run: |
        cd public
        git init
        cp ../.git/config ./.git/config
        touch .nojekyll
        git add .
        git config --local user.email "push@gha"
        git config --local user.name "GHA"
        git commit -am "update ${{ github.sha }}"
        git push -u origin +HEAD:gh-pages
